import { z } from "zod";
import { AtlasToolBase } from "../atlasTool.js";
import { formatUntrustedData } from "../../tool.js";
export class InspectAccessListTool extends AtlasToolBase {
    constructor() {
        super(...arguments);
        this.name = "atlas-inspect-access-list";
        this.description = "Inspect Ip/CIDR ranges with access to your MongoDB Atlas clusters.";
        this.operationType = "read";
        this.argsShape = {
            projectId: z.string().describe("Atlas project ID"),
        };
    }
    async execute({ projectId }) {
        const accessList = await this.session.apiClient.listProjectIpAccessLists({
            params: {
                path: {
                    groupId: projectId,
                },
            },
        });
        const results = accessList.results ?? [];
        if (!results.length) {
            return {
                content: [{ type: "text", text: "No access list entries found." }],
            };
        }
        return {
            content: formatUntrustedData(`Found ${results.length} access list entries`, `IP ADDRESS | CIDR | COMMENT
------|------|------
${results
                .map((entry) => {
                return `${entry.ipAddress} | ${entry.cidrBlock} | ${entry.comment}`;
            })
                .join("\n")}`),
        };
    }
}
//# sourceMappingURL=inspectAccessList.js.map
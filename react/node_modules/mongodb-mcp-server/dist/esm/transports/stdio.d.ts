import type { LoggerBase } from "../common/logger.js";
import { TransportRunnerBase } from "./base.js";
import type { JSONRPCMessage } from "@modelcontextprotocol/sdk/types.js";
import { StdioServerTransport } from "@modelcontextprotocol/sdk/server/stdio.js";
import type { DriverOptions, UserConfig } from "../common/config.js";
export declare class EJsonReadBuffer {
    private _buffer?;
    append(chunk: Buffer): void;
    readMessage(): JSONRPCMessage | null;
    clear(): void;
}
export declare function createStdioTransport(): StdioServerTransport;
export declare class StdioRunner extends TransportRunnerBase {
    private server;
    constructor(userConfig: UserConfig, driverOptions: DriverOptions, additionalLoggers?: LoggerBase[]);
    start(): Promise<void>;
    closeTransport(): Promise<void>;
}
//# sourceMappingURL=stdio.d.ts.map
import type { BaseEvent } from "./types.js";
/**
 * Singleton class for in-memory telemetry event caching
 * Provides a central storage for telemetry events that couldn't be sent
 * Uses LRU cache to automatically drop oldest events when limit is exceeded
 */
export declare class EventCache {
    private static instance;
    private static readonly MAX_EVENTS;
    private cache;
    private nextId;
    constructor();
    /**
     * Gets the singleton instance of EventCache
     * @returns The EventCache instance
     */
    static getInstance(): EventCache;
    /**
     * Gets a copy of the currently cached events
     * @returns Array of cached BaseEvent objects
     */
    getEvents(): BaseEvent[];
    /**
     * Appends new events to the cached events
     * LRU cache automatically handles dropping oldest events when limit is exceeded
     * @param events - The events to append
     */
    appendEvents(events: BaseEvent[]): void;
    /**
     * Clears all cached events
     */
    clearEvents(): void;
}
//# sourceMappingURL=eventCache.d.ts.map
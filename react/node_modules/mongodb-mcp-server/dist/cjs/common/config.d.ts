import type { CliOptions, ConnectionInfo } from "@mongosh/arg-parser";
export interface UserConfig extends CliOptions {
    apiBaseUrl: string;
    apiClientId?: string;
    apiClientSecret?: string;
    telemetry: "enabled" | "disabled";
    logPath: string;
    exportsPath: string;
    exportTimeoutMs: number;
    exportCleanupIntervalMs: number;
    connectionString?: string;
    disabledTools: Array<string>;
    readOnly?: boolean;
    indexCheck?: boolean;
    transport: "stdio" | "http";
    httpPort: number;
    httpHost: string;
    httpHeaders: Record<string, string>;
    loggers: Array<"stderr" | "disk" | "mcp">;
    idleTimeoutMs: number;
    notificationTimeoutMs: number;
}
export declare const defaultUserConfig: UserConfig;
export declare const config: UserConfig;
export type DriverOptions = ConnectionInfo["driverOptions"];
export declare const defaultDriverOptions: DriverOptions;
export declare const driverOptions: Omit<import("@mongosh/arg-parser").DevtoolsConnectOptions, "productName" | "productDocsLink">;
export declare function setupUserConfig({ cli, env, defaults, }: {
    cli: string[];
    env: Record<string, unknown>;
    defaults: Partial<UserConfig>;
}): UserConfig;
export declare function setupDriverConfig({ config, defaults, }: {
    config: UserConfig;
    defaults: Partial<DriverOptions>;
}): DriverOptions;
//# sourceMappingURL=config.d.ts.map
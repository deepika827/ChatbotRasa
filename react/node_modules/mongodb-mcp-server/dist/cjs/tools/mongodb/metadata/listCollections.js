"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListCollectionsTool = void 0;
const mongodbTool_js_1 = require("../mongodbTool.js");
const tool_js_1 = require("../../tool.js");
class ListCollectionsTool extends mongodbTool_js_1.MongoDBToolBase {
    constructor() {
        super(...arguments);
        this.name = "list-collections";
        this.description = "List all collections for a given database";
        this.argsShape = {
            database: mongodbTool_js_1.DbOperationArgs.database,
        };
        this.operationType = "metadata";
    }
    async execute({ database }) {
        const provider = await this.ensureConnected();
        const collections = await provider.listCollections(database);
        if (collections.length === 0) {
            return {
                content: [
                    {
                        type: "text",
                        text: `Found 0 collections for database "${database}". To create a collection, use the "create-collection" tool.`,
                    },
                ],
            };
        }
        return {
            content: (0, tool_js_1.formatUntrustedData)(`Found ${collections.length} collections for database "${database}".`, collections.map((collection) => `"${collection.name}"`).join("\n")),
        };
    }
}
exports.ListCollectionsTool = ListCollectionsTool;
//# sourceMappingURL=listCollections.js.map
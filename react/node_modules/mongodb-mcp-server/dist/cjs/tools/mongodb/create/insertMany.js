"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InsertManyTool = void 0;
const zod_1 = require("zod");
const mongodbTool_js_1 = require("../mongodbTool.js");
class InsertManyTool extends mongodbTool_js_1.MongoDBToolBase {
    constructor() {
        super(...arguments);
        this.name = "insert-many";
        this.description = "Insert an array of documents into a MongoDB collection";
        this.argsShape = {
            ...mongodbTool_js_1.DbOperationArgs,
            documents: zod_1.z
                .array(zod_1.z.object({}).passthrough().describe("An individual MongoDB document"))
                .describe("The array of documents to insert, matching the syntax of the document argument of db.collection.insertMany()"),
        };
        this.operationType = "create";
    }
    async execute({ database, collection, documents, }) {
        const provider = await this.ensureConnected();
        const result = await provider.insertMany(database, collection, documents);
        return {
            content: [
                {
                    text: `Inserted \`${result.insertedCount}\` document(s) into collection "${collection}"`,
                    type: "text",
                },
                {
                    text: `Inserted IDs: ${Object.values(result.insertedIds).join(", ")}`,
                    type: "text",
                },
            ],
        };
    }
}
exports.InsertManyTool = InsertManyTool;
//# sourceMappingURL=insertMany.js.map